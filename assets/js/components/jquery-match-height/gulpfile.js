var server,gulp=require("gulp"),uglify=require("gulp-uglify"),rename=require("gulp-rename"),header=require("gulp-header"),eslint=require("gulp-eslint"),gulpBump=require("gulp-bump"),changelog=require("gulp-conventional-changelog"),tag=require("gulp-tag-version"),release=require("gulp-github-release"),sequence=require("run-sequence"),gutil=require("gulp-util"),replace=require("gulp-replace"),webdriver=require("gulp-webdriver"),webserver=require("gulp-webserver"),selenium=require("selenium-standalone"),ngrok=require("ngrok"),staticTransform=require("connect-static-transform"),pkg=require("./package.json"),extend=require("util")._extend,exec=require("child_process").exec,fs=require("fs"),buildDirectory="dist",bump=(gulp.task("release",function(e){var r=process.argv[4]||"minor";sequence("lint","test","build","bump:"+r,"changelog","tag",e)}),gulp.task("release:push",function(e){sequence("release:push:git","release:push:github","release:push:npm",e)}),gulp.task("release:push:github",function(e){return gulp.src(["CHANGELOG.md","LICENSE",buildDirectory+"/jquery.matchHeight-min.js",buildDirectory+"/jquery.matchHeight.js"]).pipe(release({owner:"liabru",repo:pkg.name,tag:pkg.version,name:"jquery.matchHeight.js "+pkg.version}))}),gulp.task("release:push:git",function(e){shell("git push",e)}),gulp.task("release:push:npm",function(e){shell("npm publish",e)}),gulp.task("build",function(){var e=extend(pkg);return e.version=process.argv[4]||pkg.version,gulp.src("jquery.matchHeight.js").pipe(replace("jquery-match-height master","jquery-match-height "+e.version)).pipe(replace("version = 'master'","version = '"+e.version+"'")).pipe(gulp.dest(buildDirectory)),gulp.src("jquery.matchHeight.js").pipe(replace("version = 'master'","version = '"+e.version+"'")).pipe(uglify({output:{max_line_len:500}})).pipe(header(banner,{build:e})).pipe(rename({suffix:"-min"})).pipe(gulp.dest(buildDirectory))}),gulp.task("lint",function(){return gulp.src(pkg.main).pipe(eslint()).pipe(eslint.format()).pipe(eslint.failAfterError())}),function(e){return gulp.src(["package.json","bower.json"]).pipe(gulpBump(e)).pipe(gulp.dest("."))}),serve=(gulp.task("bump:patch",function(){return bump({type:"patch"})}),gulp.task("bump:minor",function(){return bump({type:"minor"})}),gulp.task("bump:major",function(){return bump({type:"major"})}),gulp.task("tag",function(){return gulp.src("package.json").pipe(tag({prefix:""}))}),gulp.task("changelog",function(){return gulp.src("CHANGELOG.md").pipe(changelog()).pipe(gulp.dest("."))}),gulp.task("serve",function(){serve(!1)}),gulp.task("serve:test",function(){serve(!0)}),gulp.task("serve:stop",function(){if(server){try{server.emit("kill")}catch(e){}gutil.log("Web server stopped")}}),gulp.task("selenium",function(t){function r(e){gutil.log("Starting Selenium server..."),selenium.start(function(e,r){gutil.log("Selenium server started"),selenium.child=r,t(e)})}try{fs.statSync("node_modules/selenium-standalone/.selenium"),r()}catch(e){gutil.log("Setting up Selenium server..."),selenium.install({logger:function(e){gutil.log(e)}},function(e){r()})}}),gulp.task("test",function(t){sequence("lint","serve:test","selenium",function(){var r;gutil.log("Starting webdriver...");gulp.src("test/conf/local.conf.js").pipe(webdriver({baseUrl:"http://localhost:8000"})).on("error",function(e){console.error(e),r=e}).on("finish",function(e){gutil.log("Webdriver stopped"),selenium.child.kill(),gutil.log("Selenium server stopped"),gulp.start("serve:stop"),t(r||e)})})}),gulp.task("test:cloud",["lint","serve:test"],function(t){ngrok.connect({authtoken:null,port:8e3},function(e,r){gutil.log("Tunnel started",r),gulp.src("test/conf/cloud.conf.js").pipe(webdriver({baseUrl:r})).on("finish",function(e){server&&(ngrok.disconnect(),ngrok.kill(),gutil.log("Tunnel stopped"),gulp.start("serve:stop")),t(e)})})}),gulp.task("test:cloud:all",["lint","serve:test"],function(t){ngrok.connect({authtoken:null,port:8e3},function(e,r){gutil.log("Tunnel started",r),gulp.src("test/conf/cloud-all.conf.js").pipe(webdriver({baseUrl:r})).on("finish",function(e){server&&(ngrok.disconnect(),ngrok.kill(),gutil.log("Tunnel stopped"),gulp.start("serve:stop")),t(e)})})}),function(e){process.on("uncaughtException",function(e){"EADDRINUSE"===e.errno&&gutil.log("Server already running (or port is otherwise in use)")}),server=gulp.src(".").pipe(webserver({host:"0.0.0.0",livereload:!e,middleware:function(e,r,t){var n=(e._parsedUrl.query||"").replace("=","");n in emulateIEMiddleware?emulateIEMiddleware[n](e,r,t):t()},open:!e&&"http://localhost:8000/test/page/test.html",directoryListing:!0}))}),banner=["/*","* <%= build.name %> <%= build.version %> by @liabru","* <%= build.homepage %>","* License <%= build.license %>","*/",""].join("\n"),emulateIEMiddlewareFactory=function(n){return staticTransform({root:__dirname,match:/(.+)\.html/,transform:function(e,r,t){t(r.replace('content="IE=edge,chrome=1"','content="IE='+n+'"'))}})},emulateIEMiddleware={ie8:emulateIEMiddlewareFactory(8),ie9:emulateIEMiddlewareFactory(9),ie10:emulateIEMiddlewareFactory(10)},shell=function(e,r){var t=process.argv.slice(3).join(" "),e=exec(e+" "+t,function(e){r(e)});e.stdout.on("data",function(e){process.stdout.write(e)}),e.stderr.on("data",function(e){process.stderr.write(e)})};